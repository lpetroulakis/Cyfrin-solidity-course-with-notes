//SPDX-License-Identifier: MIT

pragma solidity ^0.8.18;

import {AggregatorV3Interface} from "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol";

library PriceConverter {

    function getPrice() internal view returns (uint256){// since we're reaching into a contract, we'll be needing an Address and an ABI , the Address from chainlink is 0x694AA1769357215DE4FAC081bf1f309aDC325306
        // ABI
        AggregatorV3Interface PriceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);
        (,int256 answer,,,) = PriceFeed.latestRoundData(); //this price is the price of ETH in terms of USD. the price here is 8 decimals, while ETH has 18 so we have to...
        return uint256 (answer * 1e10);
        }
        function getConversionRate(uint256 ethAmount) internal view returns (uint256) {
              uint256 EthPrice = getPrice(); 
              uint256 EthAmountInUsd = (EthPrice * ethAmount) / 1e18; 
              return EthAmountInUsd; 
        }

        function getVersion() internal view returns (uint256) {
        return   AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306).version();
        }


}
